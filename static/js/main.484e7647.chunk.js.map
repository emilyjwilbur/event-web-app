{"version":3,"sources":["features/events/eventForm/EventForm.jsx","features/events/eventDashboard/EventListAttendee.jsx","features/events/eventDashboard/EventListItem.jsx","features/events/eventDashboard/EventList.jsx","app/api/sampleData.js","features/events/eventDashboard/EventDashboard.jsx","features/nav/NavBar.jsx","app/layout/App.jsx","index.js"],"names":["EventForm","setFormOpen","createEvent","setEvents","selectedEvent","updateEvent","initialValues","title","category","description","city","venue","date","useState","values","setValues","handleInputChange","e","target","name","value","Segment","clearing","Header","content","Form","onSubmit","id","cuid","hostedBy","attendees","hostPhotoURL","Field","type","placeholder","onChange","Button","floated","positive","onClick","EventListAttendee","attendee","List","Item","Image","size","circular","src","photoURL","EventListItem","event","selectEvent","deleteEvent","Group","Content","Description","Icon","secondary","horizontal","map","color","EventList","events","sampleData","EventDashboard","formOpen","Grid","Column","width","eventId","filter","evt","updatedEvent","NavBar","Menu","inverted","fixed","Container","header","alt","style","marginRight","position","basic","marginLeft","App","setSelectedEvent","className","rootEl","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.484e7647.chunk.js","sourcesContent":["import cuid from \"cuid\";\nimport React, { useState } from \"react\";\nimport { Form, Header, Segment, Button } from \"semantic-ui-react\";\n\nexport default function EventForm({\n  setFormOpen,\n  setEvents,\n  createEvent,\n  selectedEvent,\n  updateEvent,\n}) {\n  const initialValues = selectedEvent ?? {\n    title: \"\",\n    category: \"\",\n    description: \"\",\n    city: \"\",\n    venue: \"\",\n    date: \"\",\n  };\n\n  const [values, setValues] = useState(initialValues);\n\n  function handleFormSubmit() {\n    selectedEvent\n      ? updateEvent({ ...selectedEvent, ...values })\n      : createEvent({\n          ...values,\n          id: cuid(),\n          hostedBy: \"Bob\",\n          attendees: [],\n          hostPhotoURL: \"/assets/user.png\",\n        });\n    setFormOpen(false);\n  }\n\n  function handleInputChange(e) {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  }\n\n  return (\n    <Segment clearing>\n      <Header content={selectedEvent ? \"Edit Event\" : \"Create New Event\"} />\n      <Form onSubmit={handleFormSubmit}>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Event Title\"\n            name=\"title\"\n            value={values.title}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Category\"\n            name=\"category\"\n            value={values.category}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            value={values.description}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"City\"\n            name=\"city\"\n            value={values.city}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Venue\"\n            name=\"venue\"\n            value={values.venue}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"date\"\n            placeholder=\"Date\"\n            name=\"date\"\n            value={values.date}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Button type=\"submit\" floated=\"right\" positive content=\"Submit\" />\n        <Button\n          onClick={() => setFormOpen(false)}\n          type=\"submit\"\n          floated=\"right\"\n          content=\"Cancel\"\n        />\n      </Form>\n    </Segment>\n  );\n}\n","import React from 'react';\nimport { List, Image } from 'semantic-ui-react';\n\nexport default function EventListAttendee({attendee}) {\n    return(\n     <List.Item>\n         <Image size='mini' circular src={attendee.photoURL} />\n     </List.Item> \n    )\n}","import React from \"react\";\nimport { Item, Segment, Icon, List, Button } from \"semantic-ui-react\";\nimport EventListAttendee from \"./EventListAttendee\";\n\nexport default function EventListItem({ event, selectEvent, deleteEvent }) {\n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image size=\"tiny\" circular src={event.hostPhotoURL} />\n            <Item.Content>\n              <Item.Header content={event.title} />\n              <Item.Description>Hosted by {event.hostedBy}</Item.Description>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {event.date}\n          <Icon name=\"marker\" /> {event.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <List horizontal>\n          {event.attendees.map((attendee) => (\n            <EventListAttendee key={attendee.id} attendee={attendee} />\n          ))}\n        </List>\n      </Segment>\n      <Segment clearing>\n        <div>{event.description}</div>\n        <Button\n          onClick={() => deleteEvent(event.id)}\n          color=\"red\"\n          floated=\"right\"\n          content=\"Delete\"\n        />\n        <Button\n          onClick={() => selectEvent(event)}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import React from \"react\";\nimport EventListItem from \"./EventListItem\";\n\nexport default function EventList({ events, selectEvent, deleteEvent }) {\n  return (\n    <>\n      {events.map((event) => (\n        <EventListItem\n          event={event}\n          key={event.id}\n          selectEvent={selectEvent}\n          deleteEvent={deleteEvent}\n        />\n      ))}\n    </>\n  );\n}\n","export const sampleData = [\n    {\n        id: '1',\n        title: 'Trip to Empire State building',\n        date: '2018-03-21',\n        category: 'culture',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\n        city: 'NY, USA',\n        venue: 'Empire State Building, 5th Avenue, New York, NY, USA',\n        hostedBy: 'Bob',\n        hostPhotoURL: 'https://randomuser.me/api/portraits/men/20.jpg',\n        attendees: [\n            {\n                id: 'a',\n                name: 'Bob',\n                photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\n            },\n            {\n                id: 'b',\n                name: 'Tom',\n                photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\n            }\n        ]\n    },\n    {\n        id: '2',\n        title: 'Trip to Punch and Judy Pub',\n        date: '2018-03-18',\n        category: 'drinks',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\n        city: 'London, UK',\n        venue: 'Punch & Judy, Henrietta Street, London, UK',\n        hostedBy: 'Tom',\n        hostPhotoURL: 'https://randomuser.me/api/portraits/men/22.jpg',\n        attendees: [\n            {\n                id: 'a',\n                name: 'Bob',\n                photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\n            },\n            {\n                id: 'b',\n                name: 'Tom',\n                photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\n            }\n        ]\n    }\n];","import React, { useState } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport EventForm from \"../eventForm/EventForm\";\nimport EventList from \"./EventList\";\nimport { sampleData } from \"../../../app/api/sampleData\";\n\nexport default function EventDashboard({ formOpen, setFormOpen, selectEvent, selectedEvent }) {\n  const [events, setEvents] = useState(sampleData);\n\n\n  function handleCreateEvent(event) {\n    setEvents([...events, event]);\n  }\n\n  function handleUpdateEvent(updatedEvent) {\n    setEvents(events.map(evt => evt.id === updatedEvent.id ? updatedEvent : evt));\n    selectEvent(null);\n  }\n\n  function handleDeleteEvent(eventId) {\n    setEvents(events.filter(evt => evt.id !== eventId));\n  }\n\n \n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventList events={events} selectEvent={selectEvent} deleteEvent={handleDeleteEvent} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        {formOpen && (\n          <EventForm\n            setFormOpen={setFormOpen}\n            setEvents={setEvents}\n            createEvent={handleCreateEvent}\n            selectedEvent={selectedEvent}\n            updateEvent={handleUpdateEvent}\n            key={selectedEvent ? selectedEvent.id : null}\n          />\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Button, Container, Menu } from 'semantic-ui-react';\n\n\nexport default function NavBar({setFormOpen}) {\n    return (\n        <Menu inverted fixed='top'>\n            <Container>\n                <Menu.Item header>\n                    <img src=\"/assets/logo.png\" alt='logo' style={{marginRight: 15}}/>\n                    EventSpace\n                </Menu.Item>\n                <Menu.Item name=\"Events\" />\n                <Menu.Item>\n                    <Button onClick={() => setFormOpen(true)} positive inverted content='Create Event'/>\n                </Menu.Item>\n                <Menu.Item position='right'>\n                    <Button basic inverted content='Login' />\n                    <Button basic inverted content='Register' style={{marginLeft: '0.5em'}} />\n                </Menu.Item>\n            </Container>\n\n        </Menu>\n    )\n}","import React, { useState } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport EventDashboard from \"../../features/events/eventDashboard/EventDashboard\";\nimport NavBar from \"../../features/nav/NavBar\";\n\nfunction App() {\n  const [formOpen, setFormOpen] = useState(false);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n\n  function handleSelectEvent(event) {\n    setSelectedEvent(event);\n    setFormOpen(true);\n  }\n\n  function handleCreateFormOpen() {\n    setSelectedEvent(null);\n    setFormOpen(true);\n  }\n\n  return (\n    <>\n      <NavBar setFormOpen={handleCreateFormOpen} />\n      <Container className=\"main\">\n        <EventDashboard\n          formOpen={formOpen}\n          setFormOpen={setFormOpen}\n          selectEvent={handleSelectEvent}\n          selectedEvent={selectedEvent}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\n\n\nconst rootEl = document.getElementById('root');\n\nfunction render() {\n  ReactDOM.render(<App />, rootEl)\n}\n\nif (module.hot) {\n  module.hot.accept('./app/layout/App', function() {\n    setTimeout(render);\n  });\n}\n\nrender();\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}