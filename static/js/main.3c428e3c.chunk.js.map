{"version":3,"sources":["features/events/eventForm/EventForm.jsx","features/events/eventDashboard/EventListAttendee.jsx","features/events/eventDashboard/EventListItem.jsx","features/events/eventDashboard/EventList.jsx","app/api/sampleData.js","features/events/eventDashboard/EventDashboard.jsx","features/nav/NavBar.jsx","app/layout/App.jsx","index.js"],"names":["EventForm","setFormOpen","createEvent","setEvents","useState","title","category","description","city","venue","date","values","setValues","handleInputChange","e","target","name","value","Segment","clearing","Header","content","Form","onSubmit","id","cuid","hostedBy","attendees","Field","type","placeholder","onChange","Button","floated","positive","onClick","EventListAttendee","attendee","List","Item","Image","size","circular","src","photoURL","EventListItem","event","Group","hostPhotoURL","Content","Description","Icon","secondary","horizontal","map","color","EventList","events","sampleData","EventDashboard","formOpen","Grid","Column","width","NavBar","Menu","inverted","fixed","Container","header","alt","style","marginRight","position","basic","marginLeft","App","className","rootEl","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3c428e3c.chunk.js","sourcesContent":["import cuid from \"cuid\";\nimport React, { useState } from \"react\";\nimport { Form, Header, Segment, Button } from \"semantic-ui-react\";\n\nexport default function EventForm({ setFormOpen, setEvents, createEvent }) {\n  const initialValues = {\n    title: '',\n    category: '',\n    description: '',\n    city: '',\n    venue: '',\n    date: '',\n  };\n\n  const [values, setValues] = useState(initialValues);\n\n  function handleFormSubmit() {\n    createEvent({...values, id: cuid(), hostedBy:'Bob', attendees: []});\n    setFormOpen(false);\n  }\n\n  function handleInputChange(e) {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  }\n\n  return (\n    <Segment clearing>\n      <Header content=\"Create New Event\" />\n      <Form onSubmit={handleFormSubmit}>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Event Title\"\n            name=\"title\"\n            value={values.title}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Category\"\n            name=\"category\"\n            value={values.category}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Description\"\n            name=\"description\"\n            value={values.description}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"City\"\n            name=\"city\"\n            value={values.city}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"text\"\n            placeholder=\"Venue\"\n            name=\"venue\"\n            value={values.venue}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <input\n            type=\"date\"\n            placeholder=\"Date\"\n            name=\"date\"\n            value={values.date}\n            onChange={(e) => handleInputChange(e)}\n          />\n        </Form.Field>\n        <Button type=\"submit\" floated=\"right\" positive content=\"Submit\" />\n        <Button\n          onClick={() => setFormOpen(false)}\n          type=\"submit\"\n          floated=\"right\"\n          content=\"Cancel\"\n        />\n      </Form>\n    </Segment>\n  );\n}\n","import React from 'react';\nimport { List, Image } from 'semantic-ui-react';\n\nexport default function EventListAttendee({attendee}) {\n    return(\n     <List.Item>\n         <Image size='mini' circular src={attendee.photoURL} />\n     </List.Item> \n    )\n}","import React from 'react';\nimport { Item, Segment, Icon, List, Button } from 'semantic-ui-react';\nimport EventListAttendee from './EventListAttendee';\n\nexport default function EventListItem({event}) {\n    return(\n     <Segment.Group>\n         <Segment>\n             <Item.Group>\n                 <Item>\n                    <Item.Image size='tiny' circular src={event.hostPhotoURL} />\n                    <Item.Content>\n                        <Item.Header content={event.title}/>\n                        <Item.Description>\n                            Hosted by {event.hostedBy}\n                        </Item.Description>\n                    </Item.Content>\n                 </Item>\n             </Item.Group>\n         </Segment>\n         <Segment>\n             <span>\n                 <Icon name='clock' /> {event.date}\n                 <Icon name='marker' /> {event.venue}\n             </span>\n         </Segment>\n         <Segment secondary>\n            <List horizontal>\n                {event.attendees.map(attendee => (\n                    <EventListAttendee key={attendee.id} attendee={attendee} />\n                ))}\n                \n            </List>\n         </Segment>\n         <Segment clearing>\n             <div>{event.description}</div>\n             <Button color='teal' floated='right' content='View' />\n         </Segment>\n\n     </Segment.Group>\n    )\n}","import React from 'react';\nimport EventListItem from './EventListItem';\n\nexport default function EventList ({events}) {\n    return(\n        <>\n        {events.map(event => (\n            <EventListItem event={event} key={event.id}/> \n        ))}\n        \n        </>\n     \n    )\n}","export const sampleData = [\n    {\n        id: '1',\n        title: 'Trip to Empire State building',\n        date: '2018-03-21',\n        category: 'culture',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\n        city: 'NY, USA',\n        venue: 'Empire State Building, 5th Avenue, New York, NY, USA',\n        hostedBy: 'Bob',\n        hostPhotoURL: 'https://randomuser.me/api/portraits/men/20.jpg',\n        attendees: [\n            {\n                id: 'a',\n                name: 'Bob',\n                photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\n            },\n            {\n                id: 'b',\n                name: 'Tom',\n                photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\n            }\n        ]\n    },\n    {\n        id: '2',\n        title: 'Trip to Punch and Judy Pub',\n        date: '2018-03-18',\n        category: 'drinks',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\n        city: 'London, UK',\n        venue: 'Punch & Judy, Henrietta Street, London, UK',\n        hostedBy: 'Tom',\n        hostPhotoURL: 'https://randomuser.me/api/portraits/men/22.jpg',\n        attendees: [\n            {\n                id: 'a',\n                name: 'Bob',\n                photoURL: 'https://randomuser.me/api/portraits/men/20.jpg'\n            },\n            {\n                id: 'b',\n                name: 'Tom',\n                photoURL: 'https://randomuser.me/api/portraits/men/22.jpg'\n            }\n        ]\n    }\n];","import React, { useState } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport EventForm from \"../eventForm/EventForm\";\nimport EventList from \"./EventList\";\nimport { sampleData } from \"../../../app/api/sampleData\";\n\nexport default function EventDashboard({ formOpen, setFormOpen }) {\n  const [events, setEvents] = useState(sampleData);\n\n  function handleCreateEvent(event) {\n    setEvents([...events, event]);\n  }\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventList events={events} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        {formOpen && (\n          <EventForm\n            setFormOpen={setFormOpen}\n            setEvents={setEvents}\n            createEvent={handleCreateEvent}\n          />\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Button, Container, Menu } from 'semantic-ui-react';\n\n\nexport default function NavBar({setFormOpen}) {\n    return (\n        <Menu inverted fixed='top'>\n            <Container>\n                <Menu.Item header>\n                    <img src=\"/assets/logo.png\" alt='logo' style={{marginRight: 15}}/>\n                    EventSpace\n                </Menu.Item>\n                <Menu.Item name=\"Events\" />\n                <Menu.Item>\n                    <Button onClick={() => setFormOpen(true)} positive inverted content='Create Event'/>\n                </Menu.Item>\n                <Menu.Item position='right'>\n                    <Button basic inverted content='Login' />\n                    <Button basic inverted content='Register' style={{marginLeft: '0.5em'}} />\n                </Menu.Item>\n            </Container>\n\n        </Menu>\n    )\n}","import React, {useState} from 'react';\nimport { Container } from 'semantic-ui-react';\nimport EventDashboard from '../../features/events/eventDashboard/EventDashboard';\nimport NavBar from '../../features/nav/NavBar';\n\nfunction App() {\n  const [formOpen, setFormOpen] = useState(false);\n  return (\n    <>\n      <NavBar setFormOpen={setFormOpen} />\n      <Container className='main'>\n      <EventDashboard formOpen={formOpen} setFormOpen={setFormOpen} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\n\n\nconst rootEl = document.getElementById('root');\n\nfunction render() {\n  ReactDOM.render(<App />, rootEl)\n}\n\nif (module.hot) {\n  module.hot.accept('./app/layout/App', function() {\n    setTimeout(render);\n  });\n}\n\nrender();\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}